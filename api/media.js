/*
 * API sub-router for media collection endpoints.
 */

const { Router } = require('express');
const router = Router();

const queue = 'photos';

const {
  getImageInfoById,
  saveImageInfo,
  saveImageFile,
  getDownloadStreamByFilename
} = require('../models/image');

const { getChannel } = require('../lib/rabbitmq');

const fileTypes = {
  'image/jpeg' : 'jpg',
  'image/png' : 'png'
};

/*
 * GET /media/photos/:filename - Route to return an image file stored in GridFS
 */
router.get('/photos/:filename', function (req, res, next) {
    getDownloadStreamByFilename(req.params.filename, 'photos')
    .on('file', function (file) {
        res.status(200).type(file.metadata.mimetype);
    })
    .on('error', function (err) {
        if (err.code === 'ENOENT') {
            next();
        } else {
            next(err);
        }   
    })
    .pipe(res);
})

/*
 * GET /media/thumbs/:filename - Route to return a thumbnail image file generated by rabbitmq stored in GridFS
 */
router.get('/thumbs/:filename', function (req, res, next) {
    getDownloadStreamByFilename(req.params.filename, 'thumbs')
    .on('file', function (file) {
        res.status(200).type('image/jpeg');
    })
    .on('error', function (err) {
        if (err.code === 'ENOENT') {
            next();
        } else {
            next(err);
        }   
    })
    .pipe(res);
})

module.exports = router;